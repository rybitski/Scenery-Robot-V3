{"ast":null,"code":"import _classCallCheck from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/josephkaraki/middleman/client/src/App/pages/List.js\";\nimport React, { Component } from 'react';\nimport Gamepad from 'react-gamepad';\nimport update from 'immutability-helper';\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  // Initialize the state\n  function List(props) {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this, props));\n\n    _this.sendData = function () {\n      var out = Math.round(_this.state.lsx) + \",\" + Math.round(_this.state.lsy) * 10 + \",\" + Math.round(_this.state.rsy) * 10 + \",\" + _this.state.rt + \",\" + _this.state.dpad + \",\" + _this.state.a_button + \",\" + _this.state.rb + \",\" + _this.state.lb + \",\" + Math.round(_this.state.seconds * 10);\n      fetch('/api/xsend', {\n        //The remaining url of the localhost:5000 server.\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          data: out\n        })\n      });\n    };\n\n    _this.onRT = _this.onRT.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onA = _this.onA.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.axisChangeHandler = _this.axisChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onButtonDown = _this.onButtonDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onLB = _this.onLB.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onRB = _this.onRB.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onButtonUp = _this.onButtonUp.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      out_data: \"\",\n      a_button: 0,\n      rsx: 0,\n      rsy: 0,\n      lsx: 0,\n      lsy: 0,\n      rt: 0,\n      dpad: 0,\n      lb: 0,\n      rb: 0,\n      seconds: 0,\n      list: []\n    };\n    return _this;\n  } //Timer code to make sure server data is new\n\n\n  _createClass(List, [{\n    key: \"tick\",\n    value: function tick() {\n      this.setState(function (prevState) {\n        return {\n          seconds: prevState.seconds + 0.1\n        };\n      });\n      this.sendData();\n    }\n  }, {\n    key: \"connectHandler\",\n    value: function connectHandler(gamepadIndex) {\n      console.log(\"Gamepad \".concat(gamepadIndex, \" connected !\"));\n    }\n  }, {\n    key: \"disconnectHandler\",\n    value: function disconnectHandler(gamepadIndex) {\n      console.log(\"Gamepad \".concat(gamepadIndex, \" disconnected !\"));\n    } //When button is released, set the value to 0\n\n  }, {\n    key: \"onButtonUp\",\n    value: function onButtonUp(buttonName) {\n      if (buttonName === \"A\") this.setState({\n        a_button: 0\n      });\n      if (buttonName === \"LB\") this.setState({\n        lb: 0\n      });\n      if (buttonName === \"RB\") this.setState({\n        rb: 0\n      });\n      if (buttonName === \"DPadDown\") this.setState({\n        dpad: 0\n      });\n      if (buttonName === \"DPadUp\") this.setState({\n        dpad: 0\n      });\n    } //Stick handler: for x-values (turning) cast to an exact value between -127 and 127. This is to eliminate jerkiness in turning\n    //For the y-values (forward/back), cast to 127 then divide by 10. This reduces precision, but also lowers the number of packets to be sent.\n\n  }, {\n    key: \"axisChangeHandler\",\n    value: function axisChangeHandler(axisName, value, previousValue) {\n      console.log(axisName, value);\n      if (axisName === \"RightStickX\") this.setState({\n        rsx: value * 127\n      });\n      if (axisName === \"RightStickY\") this.setState({\n        rsy: value * 127 / 10\n      });\n      if (axisName === \"LeftStickX\") this.setState({\n        lsx: value * 127\n      });\n      if (axisName === \"LeftStickY\") this.setState({\n        lsy: value * 127 / 10\n      });\n    }\n  }, {\n    key: \"onRT\",\n    value: function onRT() {\n      console.log(\"RT\");\n      this.setState({\n        rt: 1\n      });\n    } //When dpad is pressed, set the value to specific int\n\n  }, {\n    key: \"onButtonDown\",\n    value: function onButtonDown(buttonName) {\n      console.log(buttonName);\n      if (buttonName === \"DPadUp\") this.setState({\n        dpad: 1\n      });\n      if (buttonName === \"DPadRight\") this.setState({\n        dpad: 2\n      });\n      if (buttonName === \"DPadDown\") this.setState({\n        dpad: 3\n      });\n      if (buttonName === \"DPadLeft\") this.setState({\n        dpad: 4\n      });\n    }\n  }, {\n    key: \"onA\",\n    value: function onA() {\n      console.log(\"A\");\n      this.setState({\n        a_button: 1\n      });\n    }\n  }, {\n    key: \"onLB\",\n    value: function onLB() {\n      console.log(\"LB\");\n      this.setState({\n        lb: 1\n      });\n    }\n  }, {\n    key: \"onRB\",\n    value: function onRB() {\n      console.log(\"RB\");\n      this.setState({\n        rb: 1\n      });\n    } // Start timer on page load\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.interval = setInterval(function () {\n        return _this2.tick();\n      }, 100);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    } // Send data to the server. We round so that we dont send the 15 trailing decimals.\n\n  }, {\n    key: \"render\",\n    //What will render on the client page\n    value: function render() {\n      var list = this.state.list;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Gamepad, {\n        deadZone: 0.08,\n        onConnect: this.connectHandler,\n        onDisconnect: this.disconnectHandler,\n        onButtonDown: this.onButtonDown,\n        onAxisChange: this.axisChangeHandler,\n        onLB: this.onLB,\n        onRB: this.onRB,\n        onA: this.onA,\n        onRT: this.onRT,\n        onButtonUp: this.onButtonUp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Seconds: \", this.state.seconds), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Live Server Data\"), list.length ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, list.map(function (item) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, item);\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"Server Stuff\"), Math.round(this.state.lsx), \",\", Math.round(this.state.lsy) * 10, \",\", Math.round(this.state.rsy) * 10, \",\", this.state.rt, \",\", this.state.dpad, \",\", this.state.a_button, \",\", this.state.rb, \",\", this.state.lb));\n    }\n  }]);\n\n  return List;\n}(Component);\n\nexport default List;","map":{"version":3,"sources":["/Users/josephkaraki/middleman/client/src/App/pages/List.js"],"names":["React","Component","Gamepad","update","List","props","sendData","out","Math","round","state","lsx","lsy","rsy","rt","dpad","a_button","rb","lb","seconds","fetch","method","headers","body","JSON","stringify","data","onRT","bind","onA","axisChangeHandler","onButtonDown","onLB","onRB","onButtonUp","out_data","rsx","list","setState","prevState","gamepadIndex","console","log","buttonName","axisName","value","previousValue","interval","setInterval","tick","clearInterval","connectHandler","disconnectHandler","length","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Gamepad from 'react-gamepad'\nimport update from 'immutability-helper';\n\nclass List extends Component {\n    // Initialize the state\n    constructor(props) {\n        super(props);\n        this.onRT = this.onRT.bind(this);\n        this.onA = this.onA.bind(this);\n        this.axisChangeHandler = this.axisChangeHandler.bind(this);\n        this.onButtonDown = this.onButtonDown.bind(this);\n        this.onLB = this.onLB.bind(this);\n        this.onRB = this.onRB.bind(this);\n        this.onButtonUp = this.onButtonUp.bind(this);\n        this.state = {\n            out_data: \"\",\n            a_button: 0,\n            rsx: 0,\n            rsy: 0,\n            lsx: 0,\n            lsy: 0,\n            rt: 0,\n            dpad: 0,\n            lb: 0,\n            rb: 0,\n            seconds: 0,\n            list: []\n        }\n\n    }\n    //Timer code to make sure server data is new\n    tick() {\n        this.setState(prevState => ({\n            seconds: prevState.seconds + 0.1\n        }));\n        this.sendData();\n\n    }\n\n\n\n\n    connectHandler(gamepadIndex) {\n        console.log(`Gamepad ${gamepadIndex} connected !`)\n    }\n\n    disconnectHandler(gamepadIndex) {\n        console.log(`Gamepad ${gamepadIndex} disconnected !`)\n    }\n\n    //When button is released, set the value to 0\n\n    onButtonUp(buttonName) {\n        if (buttonName === \"A\")\n            this.setState({\n                a_button: 0\n            });\n        if (buttonName === \"LB\")\n            this.setState({\n                lb: 0\n            });\n        if (buttonName === \"RB\")\n            this.setState({\n                rb: 0\n            });\n        if (buttonName === \"DPadDown\")\n            this.setState({\n                dpad: 0\n            });\n        if (buttonName === \"DPadUp\")\n            this.setState({\n                dpad: 0\n            });\n    }\n\n    //Stick handler: for x-values (turning) cast to an exact value between -127 and 127. This is to eliminate jerkiness in turning\n    //For the y-values (forward/back), cast to 127 then divide by 10. This reduces precision, but also lowers the number of packets to be sent.\n    axisChangeHandler(axisName, value, previousValue) {\n        console.log(axisName, value)\n        if (axisName === \"RightStickX\")\n            this.setState({\n                rsx: value * 127\n            });\n        if (axisName === \"RightStickY\")\n            this.setState({\n                rsy: value * 127 / 10\n            });\n        if (axisName === \"LeftStickX\")\n            this.setState({\n                lsx: value * 127\n            });\n        if (axisName === \"LeftStickY\")\n            this.setState({\n                lsy: value * 127 / 10\n            });\n\n    }\n    onRT() {\n        console.log(\"RT\")\n        this.setState({\n            rt: 1\n        });\n\n    }\n    \n    //When dpad is pressed, set the value to specific int\n\n    onButtonDown(buttonName) {\n        console.log(buttonName)\n        if (buttonName === \"DPadUp\")\n            this.setState({\n                dpad: 1\n            });\n        if (buttonName === \"DPadRight\")\n            this.setState({\n                dpad: 2\n            });\n        if (buttonName === \"DPadDown\")\n            this.setState({\n                dpad: 3\n            });\n        if (buttonName === \"DPadLeft\")\n            this.setState({\n                dpad: 4\n            });\n    }\n\n\n    onA() {\n        console.log(\"A\")\n        this.setState({\n            a_button: 1\n        });\n    }\n\n\n    onLB() {\n        console.log(\"LB\")\n        this.setState({\n            lb: 1\n        });\n    }\n    onRB() {\n        console.log(\"RB\")\n        this.setState({\n            rb: 1\n        });\n\n    }\n    // Start timer on page load\n    componentDidMount() {\n        this.interval = setInterval(() => this.tick(), 100);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n    // Send data to the server. We round so that we dont send the 15 trailing decimals.\n    sendData = () => {\n        var out = Math.round(this.state.lsx) + \",\" + Math.round(this.state.lsy) * 10 + \",\" + Math.round(this.state.rsy) * 10 + \",\" + this.state.rt + \",\" + this.state.dpad + \",\" + this.state.a_button + \",\" + this.state.rb + \",\" + this.state.lb + \",\" + Math.round(this.state.seconds * 10);\n        fetch('/api/xsend', { //The remaining url of the localhost:5000 server.\n            method: 'post',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                data: out,\n            }),\n        })\n    };\n\n    //What will render on the client page\n    render() {\n        const { list } = this.state;\n\n        return (\n            <div className=\"App\">\n                <Gamepad\n                    deadZone={0.08}\n                    onConnect={this.connectHandler}\n                    onDisconnect={this.disconnectHandler}\n                    onButtonDown={this.onButtonDown}\n                    onAxisChange={this.axisChangeHandler}\n                    onLB={this.onLB}\n                    onRB={this.onRB}\n                    onA={this.onA}\n                    onRT={this.onRT}\n                    onButtonUp={this.onButtonUp}\n\n                >\n                    <p></p>\n                </Gamepad>\n                <div>\n                    Seconds: {this.state.seconds}\n                </div>\n                <h1>Live Server Data</h1>\n                {/* Check to see if any items are found*/}\n                {list.length ? (\n                    <div>\n                        {/* Render the list of items */}\n                        {list.map((item) => {\n                            return (\n                                <div>\n                                    {item}\n                                </div>\n                            );\n                        })}\n                    </div>\n                ) : (\n                        <div>\n                            <h2>Server Stuff</h2>\n\n                            {Math.round(this.state.lsx)},{Math.round(this.state.lsy) * 10},{Math.round(this.state.rsy) * 10},{this.state.rt},{this.state.dpad},{this.state.a_button},{this.state.rb},{this.state.lb}\n                        </div>\n                    )\n                }\n            </div>\n        );\n    }\n\n}\n\nexport default List;"]},"metadata":{},"sourceType":"module"}