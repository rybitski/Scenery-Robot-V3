{"ast":null,"code":"import _classCallCheck from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _objectWithoutProperties from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/josephkaraki/middleman/client/src/App/pages/List.js\";\nimport React, { Component } from 'react';\nimport Gamepad from 'react-gamepad';\nimport 'rc-slider/assets/index.css';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport Tooltip from 'rc-tooltip';\nimport Slider from 'rc-slider';\nvar wrapperStyle = {\n  width: 400,\n  margin: 50\n};\nvar createSliderWithTooltip = Slider.createSliderWithTooltip;\nvar Handle = Slider.Handle;\n\nvar handle = function handle(props) {\n  var value = props.value,\n      dragging = props.dragging,\n      index = props.index,\n      restProps = _objectWithoutProperties(props, [\"value\", \"dragging\", \"index\"]);\n\n  return React.createElement(Tooltip, {\n    prefixCls: \"rc-slider-tooltip\",\n    overlay: value,\n    visible: dragging,\n    placement: \"top\",\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Handle, Object.assign({\n    value: value\n  }, restProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })));\n};\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  // Initialize the state\n  function List(props) {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this, props));\n\n    _this.sendData = function () {\n      var out = Math.round(_this.state.lsx) + \",\" + Math.round(_this.state.lsy) * 10 + \",\" + Math.round(_this.state.rsy) * 10 + \",\" + _this.state.rt + \",\" + _this.state.dpad + \",\" + _this.state.a_button + \",\" + _this.state.rb + \",\" + _this.state.lb + \",\" + Math.round(_this.state.seconds * 10);\n      fetch('/api/xsend', {\n        //The remaining url of the localhost:5000 server.\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          data: out\n        })\n      });\n    };\n\n    _this.onRT = _this.onRT.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onA = _this.onA.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.axisChangeHandler = _this.axisChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onButtonDown = _this.onButtonDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onLB = _this.onLB.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onRB = _this.onRB.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onButtonUp = _this.onButtonUp.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeDeadzone = _this.handleChangeDeadzone.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmitDeadzone = _this.handleSubmitDeadzone.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      deadzone: 0.08,\n      out_data: \"\",\n      a_button: 0,\n      rsx: 0,\n      rsy: 0,\n      lsx: 0,\n      lsy: 0,\n      rt: 0,\n      dpad: 0,\n      lb: 0,\n      rb: 0,\n      seconds: 0,\n      list: []\n    };\n    return _this;\n  } //Timer code to make sure server data is new\n\n\n  _createClass(List, [{\n    key: \"tick\",\n    value: function tick() {\n      this.setState(function (prevState) {\n        return {\n          seconds: prevState.seconds + 0.1\n        };\n      });\n      this.sendData();\n    }\n  }, {\n    key: \"connectHandler\",\n    value: function connectHandler(gamepadIndex) {\n      console.log(\"Gamepad \".concat(gamepadIndex, \" connected !\"));\n    }\n  }, {\n    key: \"disconnectHandler\",\n    value: function disconnectHandler(gamepadIndex) {\n      console.log(\"Gamepad \".concat(gamepadIndex, \" disconnected !\"));\n    }\n  }, {\n    key: \"handleChangeDeadzone\",\n    value: function handleChangeDeadzone(event) {\n      this.setState({\n        deadzone: event.target.value\n      });\n      console.log(this.state.deadzone);\n    }\n  }, {\n    key: \"handleSubmitDeadzone\",\n    value: function handleSubmitDeadzone(event) {\n      console.log('Your favorite flavor is: ' + this.state.deadzone);\n    } //When button is released, set the value to 0\n\n  }, {\n    key: \"onButtonUp\",\n    value: function onButtonUp(buttonName) {\n      if (buttonName === \"A\") this.setState({\n        a_button: 0\n      });\n      if (buttonName === \"LB\") this.setState({\n        lb: 0\n      });\n      if (buttonName === \"RB\") this.setState({\n        rb: 0\n      });\n      if (buttonName === \"DPadDown\") this.setState({\n        dpad: 0\n      });\n      if (buttonName === \"DPadUp\") this.setState({\n        dpad: 0\n      });\n    } //Stick handler: for x-values (turning) cast to an exact value between -127 and 127. This is to eliminate jerkiness in turning\n    //For the y-values (forward/back), cast to 127 then divide by 10. This reduces precision, but also lowers the number of packets to be sent.\n\n  }, {\n    key: \"axisChangeHandler\",\n    value: function axisChangeHandler(axisName, value, previousValue) {\n      console.log(axisName, value);\n      if (axisName === \"RightStickX\") this.setState({\n        rsx: value * 127\n      });\n      if (axisName === \"RightStickY\") this.setState({\n        rsy: value * 127 / 10\n      });\n      if (axisName === \"LeftStickX\") this.setState({\n        lsx: value * 127\n      });\n      if (axisName === \"LeftStickY\") this.setState({\n        lsy: value * 127 / 10\n      });\n    }\n  }, {\n    key: \"onRT\",\n    value: function onRT() {\n      console.log(\"RT\");\n      this.setState({\n        rt: 1\n      });\n    } //When dpad is pressed, set the value to specific int\n\n  }, {\n    key: \"onButtonDown\",\n    value: function onButtonDown(buttonName) {\n      console.log(buttonName);\n      if (buttonName === \"DPadUp\") this.setState({\n        dpad: 1\n      });\n      if (buttonName === \"DPadRight\") this.setState({\n        dpad: 2\n      });\n      if (buttonName === \"DPadDown\") this.setState({\n        dpad: 3\n      });\n      if (buttonName === \"DPadLeft\") this.setState({\n        dpad: 4\n      });\n    }\n  }, {\n    key: \"onA\",\n    value: function onA() {\n      console.log(\"A\");\n      this.setState({\n        a_button: 1\n      });\n    }\n  }, {\n    key: \"onLB\",\n    value: function onLB() {\n      console.log(\"LB\");\n      this.setState({\n        lb: 1\n      });\n    }\n  }, {\n    key: \"onRB\",\n    value: function onRB() {\n      console.log(\"RB\");\n      this.setState({\n        rb: 1\n      });\n    } // Start timer on page load\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.interval = setInterval(function () {\n        return _this2.tick();\n      }, 100);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    } // Send data to the server. We round so that we dont send the 15 trailing decimals.\n\n  }, {\n    key: \"render\",\n    //What will render on the client page\n    value: function render() {\n      var list = this.state.list;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(Gamepad, {\n        deadZone: this.state.deadzone,\n        onConnect: this.connectHandler,\n        onDisconnect: this.disconnectHandler,\n        onButtonDown: this.onButtonDown,\n        onAxisChange: this.axisChangeHandler,\n        onLB: this.onLB,\n        onRB: this.onRB,\n        onA: this.onA,\n        onRT: this.onRT,\n        onButtonUp: this.onButtonUp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"Seconds: \", this.state.seconds), React.createElement(\"div\", {\n        style: wrapperStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Speed\"), React.createElement(Slider, {\n        min: 0,\n        max: 20,\n        defaultValue: 3,\n        handle: handle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      })), React.createElement(\"form\", {\n        onSubmit: this.handleSubmitDeadzone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Pick your deadzone:\", React.createElement(\"select\", {\n        value: this.state.deadzone,\n        onChange: this.handleChangeDeadzone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"0.02\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"2\"), React.createElement(\"option\", {\n        value: \"0.04\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"4\"), React.createElement(\"option\", {\n        value: \"0.06\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"6\"), React.createElement(\"option\", {\n        value: \"0.08\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"8\")))), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"Live Server Data\"), list.length ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, list.map(function (item) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        }, item);\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"Server Stuff\"), Math.round(this.state.lsx), \",\", Math.round(this.state.lsy) * 10, \",\", Math.round(this.state.rsy) * 10, \",\", this.state.rt, \",\", this.state.dpad, \",\", this.state.a_button, \",\", this.state.rb, \",\", this.state.lb, \", \", this.state.deadzone));\n    }\n  }]);\n\n  return List;\n}(Component);\n\nexport default List;","map":{"version":3,"sources":["/Users/josephkaraki/middleman/client/src/App/pages/List.js"],"names":["React","Component","Gamepad","Tooltip","Slider","wrapperStyle","width","margin","createSliderWithTooltip","Handle","handle","props","value","dragging","index","restProps","List","sendData","out","Math","round","state","lsx","lsy","rsy","rt","dpad","a_button","rb","lb","seconds","fetch","method","headers","body","JSON","stringify","data","onRT","bind","onA","axisChangeHandler","onButtonDown","onLB","onRB","onButtonUp","handleChangeDeadzone","handleSubmitDeadzone","deadzone","out_data","rsx","list","setState","prevState","gamepadIndex","console","log","event","target","buttonName","axisName","previousValue","interval","setInterval","tick","clearInterval","connectHandler","disconnectHandler","length","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Gamepad from 'react-gamepad'\nimport 'rc-slider/assets/index.css';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport Tooltip from 'rc-tooltip';\nimport Slider from 'rc-slider';\nconst wrapperStyle = { width: 400, margin: 50 };\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst Handle = Slider.Handle;\n\nconst handle = (props) => {\n  const { value, dragging, index, ...restProps } = props;\n  return (\n    <Tooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={value}\n      visible={dragging}\n      placement=\"top\"\n      key={index}\n    >\n      <Handle value={value} {...restProps} />\n    </Tooltip>\n  );\n};\n\nclass List extends Component {\n    // Initialize the state\n    constructor(props) {\n        super(props);\n        this.onRT = this.onRT.bind(this);\n        this.onA = this.onA.bind(this);\n        this.axisChangeHandler = this.axisChangeHandler.bind(this);\n        this.onButtonDown = this.onButtonDown.bind(this);\n        this.onLB = this.onLB.bind(this);\n        this.onRB = this.onRB.bind(this);\n        this.onButtonUp = this.onButtonUp.bind(this);\n        this.handleChangeDeadzone = this.handleChangeDeadzone.bind(this);\n        this.handleSubmitDeadzone = this.handleSubmitDeadzone.bind(this);\n\n        this.state = {\n            deadzone: 0.08,\n            out_data: \"\",\n            a_button: 0,\n            rsx: 0,\n            rsy: 0,\n            lsx: 0,\n            lsy: 0,\n            rt: 0,\n            dpad: 0,\n            lb: 0,\n            rb: 0,\n            seconds: 0,\n            list: []\n        }\n\n    }\n    //Timer code to make sure server data is new\n    tick() {\n        this.setState(prevState => ({\n            seconds: prevState.seconds + 0.1\n        }));\n        this.sendData();\n\n    }\n\n\n\n\n    connectHandler(gamepadIndex) {\n        console.log(`Gamepad ${gamepadIndex} connected !`)\n    }\n\n    disconnectHandler(gamepadIndex) {\n        console.log(`Gamepad ${gamepadIndex} disconnected !`)\n    }\n\n    handleChangeDeadzone(event) {\n        this.setState({ deadzone: event.target.value });\n        console.log(this.state.deadzone)\n    }\n\n    handleSubmitDeadzone(event) {\n        console.log('Your favorite flavor is: ' + this.state.deadzone);\n    }\n    //When button is released, set the value to 0\n\n    onButtonUp(buttonName) {\n        if (buttonName === \"A\")\n            this.setState({\n                a_button: 0\n            });\n        if (buttonName === \"LB\")\n            this.setState({\n                lb: 0\n            });\n        if (buttonName === \"RB\")\n            this.setState({\n                rb: 0\n            });\n        if (buttonName === \"DPadDown\")\n            this.setState({\n                dpad: 0\n            });\n        if (buttonName === \"DPadUp\")\n            this.setState({\n                dpad: 0\n            });\n    }\n\n    //Stick handler: for x-values (turning) cast to an exact value between -127 and 127. This is to eliminate jerkiness in turning\n    //For the y-values (forward/back), cast to 127 then divide by 10. This reduces precision, but also lowers the number of packets to be sent.\n    axisChangeHandler(axisName, value, previousValue) {\n        console.log(axisName, value)\n        if (axisName === \"RightStickX\")\n            this.setState({\n                rsx: value * 127\n            });\n        if (axisName === \"RightStickY\")\n            this.setState({\n                rsy: value * 127 / 10\n            });\n        if (axisName === \"LeftStickX\")\n            this.setState({\n                lsx: value * 127\n            });\n        if (axisName === \"LeftStickY\")\n            this.setState({\n                lsy: value * 127 / 10\n            });\n\n    }\n    onRT() {\n        console.log(\"RT\")\n        this.setState({\n            rt: 1\n        });\n\n    }\n\n    //When dpad is pressed, set the value to specific int\n\n    onButtonDown(buttonName) {\n        console.log(buttonName)\n        if (buttonName === \"DPadUp\")\n            this.setState({\n                dpad: 1\n            });\n        if (buttonName === \"DPadRight\")\n            this.setState({\n                dpad: 2\n            });\n        if (buttonName === \"DPadDown\")\n            this.setState({\n                dpad: 3\n            });\n        if (buttonName === \"DPadLeft\")\n            this.setState({\n                dpad: 4\n            });\n    }\n\n\n    onA() {\n        console.log(\"A\")\n        this.setState({\n            a_button: 1\n        });\n    }\n\n\n    onLB() {\n        console.log(\"LB\")\n        this.setState({\n            lb: 1\n        });\n    }\n    onRB() {\n        console.log(\"RB\")\n        this.setState({\n            rb: 1\n        });\n\n    }\n    // Start timer on page load\n    componentDidMount() {\n        this.interval = setInterval(() => this.tick(), 100);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n    // Send data to the server. We round so that we dont send the 15 trailing decimals.\n    sendData = () => {\n        var out = Math.round(this.state.lsx) + \",\" + Math.round(this.state.lsy) * 10 + \",\" + Math.round(this.state.rsy) * 10 + \",\" + this.state.rt + \",\" + this.state.dpad + \",\" + this.state.a_button + \",\" + this.state.rb + \",\" + this.state.lb + \",\" + Math.round(this.state.seconds * 10);\n        fetch('/api/xsend', { //The remaining url of the localhost:5000 server.\n            method: 'post',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                data: out,\n            }),\n        })\n    };\n\n    //What will render on the client page\n    render() {\n        const { list } = this.state;\n\n        return (\n            <div className=\"App\">\n                <Gamepad\n                    deadZone={this.state.deadzone}\n                    onConnect={this.connectHandler}\n                    onDisconnect={this.disconnectHandler}\n                    onButtonDown={this.onButtonDown}\n                    onAxisChange={this.axisChangeHandler}\n                    onLB={this.onLB}\n                    onRB={this.onRB}\n                    onA={this.onA}\n                    onRT={this.onRT}\n                    onButtonUp={this.onButtonUp}\n\n                >\n                    <p></p>\n                </Gamepad>\n                <div>\n                    Seconds: {this.state.seconds}\n                </div>\n                <div style={wrapperStyle}>\n                    <p>Speed</p>\n                    <Slider min={0} max={20} defaultValue={3} handle={handle} />\n                </div>\n                <form onSubmit={this.handleSubmitDeadzone}>\n                    <label>\n                        Pick your deadzone:\n                        <select value={this.state.deadzone} onChange={this.handleChangeDeadzone}>\n                            <option value=\"0.02\">2</option>\n                            <option value=\"0.04\">4</option>\n                            <option value=\"0.06\">6</option>\n                            <option value=\"0.08\">8</option>\n                        </select>\n                    </label>\n                </form>\n                <h1>Live Server Data</h1>\n                {/* Check to see if any items are found*/}\n                {list.length ? (\n                    <div>\n                        {/* Render the list of items */}\n                        {list.map((item) => {\n                            return (\n                                <div>\n                                    {item}\n                                </div>\n                            );\n                        })}\n                    </div>\n                ) : (\n                        <div>\n                            <h2>Server Stuff</h2>\n\n                            {Math.round(this.state.lsx)},{Math.round(this.state.lsy) * 10},{Math.round(this.state.rsy) * 10},{this.state.rt},{this.state.dpad},{this.state.a_button},{this.state.rb},{this.state.lb}, {this.state.deadzone}\n                        </div>\n                    )\n                }\n            </div>\n        );\n    }\n\n}\n\nexport default List;"]},"metadata":{},"sourceType":"module"}