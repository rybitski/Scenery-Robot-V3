{"ast":null,"code":"import _classCallCheck from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/josephkaraki/middleman/client/src/App/pages/List.js\";\nimport React, { Component } from 'react';\nimport Script from 'react-load-script';\nimport Gamepad from 'react-gamepad';\nimport update from 'immutability-helper';\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  // Initialize the state\n  function List(props) {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this, props));\n\n    _this.sendData = function () {\n      fetch('/api/xsend', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          data: \"50,50\"\n        })\n      });\n    };\n\n    _this.onRT = _this.onRT.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onA = _this.onA.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.axisChangeHandler = _this.axisChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onButtonDown = _this.onButtonDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onLB = _this.onLB.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onRB = _this.onRB.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      out_data: \"\",\n      a_button: 0,\n      rsx: 0,\n      rsy: 0,\n      lsy: 0,\n      rt: 0,\n      dpad: 0,\n      lb: 0,\n      rb: 0,\n      list: []\n    };\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"connectHandler\",\n    value: function connectHandler(gamepadIndex) {\n      console.log(\"Gamepad \".concat(gamepadIndex, \" connected !\"));\n    }\n  }, {\n    key: \"disconnectHandler\",\n    value: function disconnectHandler(gamepadIndex) {\n      console.log(\"Gamepad \".concat(gamepadIndex, \" disconnected !\"));\n    }\n  }, {\n    key: \"axisChangeHandler\",\n    value: function axisChangeHandler(axisName, value, previousValue) {\n      console.log(axisName, value);\n      if (axisName === \"RightStickX\") this.setState({\n        rsx: 1\n      });\n      if (axisName === \"RightStickY\") this.setState({\n        rsy: 1\n      });\n      if (axisName === \"LeftStickY\") this.setState({\n        lsy: 1\n      });\n    }\n  }, {\n    key: \"onRT\",\n    value: function onRT() {\n      console.log(\"RT\");\n      /*this.setState({\n          out_data: update(this.state.out_data, {3: 1})\n      })*/\n\n      this.setState({\n        rt: 1\n      });\n    }\n  }, {\n    key: \"onButtonDown\",\n    value: function onButtonDown(buttonName) {\n      console.log(buttonName);\n      if (buttonName === \"DPadUp\") this.setState({\n        dpad: 1\n      });\n      if (buttonName === \"DPadRight\") this.setState({\n        dpad: 2\n      });\n      if (buttonName === \"DPadDown\") this.setState({\n        dpad: 3\n      });\n      if (buttonName === \"DPadLeft\") this.setState({\n        dpad: 4\n      });\n    }\n  }, {\n    key: \"onA\",\n    value: function onA() {\n      console.log(\"A\");\n      this.setState({\n        a_button: 1\n      });\n    }\n  }, {\n    key: \"onLB\",\n    value: function onLB() {\n      console.log(\"LB\");\n      this.setState({\n        lb: 1\n      });\n    }\n  }, {\n    key: \"onRB\",\n    value: function onRB() {\n      console.log(\"RB\");\n      this.setState({\n        rb: 1\n      });\n    } // Fetch the list on first mount\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.sendData(); //this.reportOnGamepad();\n    }\n  }, {\n    key: \"render\",\n    // Retrieves the list of items from the Express app\n    value: function render() {\n      var list = this.state.list;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Gamepad, {\n        onConnect: this.connectHandler,\n        onDisconnect: this.disconnectHandler,\n        onButtonDown: this.onButtonDown,\n        onAxisChange: this.axisChangeHandler,\n        onLB: this.onLB,\n        onRB: this.onRb,\n        onA: this.onA,\n        onRT: this.onRT,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      })), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"List of Items\"), list.length ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, list.map(function (item) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, item);\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"No List Items Found\"), this.state.rt, \",\", this.state.a_button));\n    }\n  }]);\n\n  return List;\n}(Component);\n\nexport default List;","map":{"version":3,"sources":["/Users/josephkaraki/middleman/client/src/App/pages/List.js"],"names":["React","Component","Script","Gamepad","update","List","props","sendData","fetch","method","headers","body","JSON","stringify","data","onRT","bind","onA","axisChangeHandler","onButtonDown","onLB","onRB","state","out_data","a_button","rsx","rsy","lsy","rt","dpad","lb","rb","list","gamepadIndex","console","log","axisName","value","previousValue","setState","buttonName","connectHandler","disconnectHandler","onRb","length","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Script from 'react-load-script'\nimport Gamepad from 'react-gamepad'\nimport update from 'immutability-helper';\n\nclass List extends Component {\n  // Initialize the state\n  constructor(props){\n    super(props);\n    this.onRT = this.onRT.bind(this);\n    this.onA = this.onA.bind(this);\n    this.axisChangeHandler = this.axisChangeHandler.bind(this);\n    this.onButtonDown = this.onButtonDown.bind(this);\n    this.onLB = this.onLB.bind(this);\n    this.onRB = this.onRB.bind(this);\n\n    this.state = {\n        out_data:\"\",\n        a_button: 0,\n        rsx:0,\n        rsy:0,\n        lsy:0,\n        rt:0,\n        dpad: 0,\n        lb: 0,\n        rb: 0,\n      list: []\n    }\n\n  }\n \n    connectHandler(gamepadIndex) {\n    console.log(`Gamepad ${gamepadIndex} connected !`)\n    }\n    \n    disconnectHandler(gamepadIndex) {\n    console.log(`Gamepad ${gamepadIndex} disconnected !`)\n    }\n   \n    \n    axisChangeHandler(axisName, value, previousValue) {\n        console.log(axisName, value)\n        if (axisName===\"RightStickX\")\n            this.setState({\n                rsx: 1\n            });\n        if (axisName===\"RightStickY\")\n            this.setState({\n                rsy: 1\n            });   \n        if (axisName===\"LeftStickY\")\n            this.setState({\n                lsy: 1\n            });   \n      \n    }\n    onRT(){\n        console.log(\"RT\")\n        /*this.setState({\n            out_data: update(this.state.out_data, {3: 1})\n        })*/\n        this.setState({\n            rt: 1\n          });\n          \n    }  \n    onButtonDown(buttonName) {\n        console.log(buttonName)\n        if (buttonName===\"DPadUp\")\n        this.setState({\n            dpad: 1\n          });\n        if (buttonName===\"DPadRight\")\n        this.setState({\n            dpad: 2\n          });\n        if (buttonName===\"DPadDown\")\n            this.setState({\n                dpad: 3\n            });\n        if (buttonName===\"DPadLeft\")\n        this.setState({\n            dpad: 4\n          });\n    }\n\n    \n    onA(){\n        console.log(\"A\")\n        this.setState({\n            a_button: 1\n          });\n    }\n    \n\n    onLB(){\n        console.log(\"LB\")\n        this.setState({\n            lb: 1\n          });\n     }\n     onRB(){\n        console.log(\"RB\")\n        this.setState({\n            rb: 1\n          });\n    \n     }\n  // Fetch the list on first mount\n  componentDidMount() {\n    this.sendData();\n    //this.reportOnGamepad();\n    \n  }\n  \nsendData = () =>{\n    fetch('/api/xsend', {  \n        method: 'post',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n            data : \"50,50\",\n            }),\n        }) \n};\n  \n  // Retrieves the list of items from the Express app\n\n\n\n  render() {\n    const { list } = this.state;\n\n    return (\n      <div className=\"App\">\n      <Gamepad\n        onConnect={this.connectHandler}\n        onDisconnect={this.disconnectHandler}\n        onButtonDown={this.onButtonDown}\n        onAxisChange={this.axisChangeHandler}\n        onLB={this.onLB}\n        onRB={this.onRb}\n        onA={this.onA}\n        onRT={this.onRT}\n\n\n      >\n     <p></p>\n    </Gamepad>\n\n        <h1>List of Items</h1>\n        {/* Check to see if any items are found*/}\n        {list.length ? (\n          <div>\n            {/* Render the list of items */}\n            {list.map((item) => {\n              return(\n                <div>\n                  {item}\n                </div>\n              );\n            })}\n          </div>\n        ) : (\n          <div>\n            <h2>No List Items Found</h2>\n            \n            {this.state.rt},{this.state.a_button}\n          </div>\n        )\n      }\n      </div>\n    );\n  }\n  \n}\n\nexport default List;"]},"metadata":{},"sourceType":"module"}