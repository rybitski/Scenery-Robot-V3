{"ast":null,"code":"import _classCallCheck from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/josephkaraki/middleman/client/src/App/pages/List.js\";\nimport React, { Component } from 'react';\nimport Script from 'react-load-script';\nimport Gamepad from 'react-gamepad';\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  // Initialize the state\n  function List(props) {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this, props));\n\n    _this.sendData = function () {\n      fetch('/api/xsend', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          data: \"50,50\"\n        })\n      });\n    };\n\n    _this.getList = function () {\n      fetch('/api/getList').then(function (res) {\n        return res.json();\n      }).then(function (list) {\n        return _this.setState({\n          list: list\n        });\n      });\n    };\n\n    _this.reportOnGamepad = function () {\n      var rt;\n      var d_pad;\n      var a_button;\n      var l_bump;\n      var r_bump;\n      var gp = navigator.getGamepads()[0];\n      if (gp.buttons[8].pressed) rt = 1;else rt = 0;\n      if (gp.buttons[1].pressed) a_button = 1;else a_button = 0;\n      if (gp.buttons[5].pressed) l_bump = 1;else l_bump = 0;\n      if (gp.buttons[6].pressed) r_bump = 1;else r_bump = 0;\n      if (gp.buttons[13].pressed) d_pad = 1;else if (gp.buttons[16].pressed) d_pad = 2;else if (gp.buttons[14].pressed) d_pad = 3;else if (gp.buttons[15].pressed) d_pad = 4;else d_pad = 0;\n      var out = gp.axes[2] * 127 + \",\" + gp.axes[3] * 127 + \",\" + gp.axes[1] * 127 + \",\" + rt + \",\" + d_pad + \",\" + a_button + \",\" + l_bump + \",\" + r_bump;\n      console.log(out);\n\n      _this.setState({\n        out_data: out\n      });\n    };\n\n    _this.state = {\n      out_data: \"\",\n      list: []\n    };\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"connectHandler\",\n    value: function connectHandler(gamepadIndex) {\n      console.log(\"Gamepad \".concat(gamepadIndex, \" connected !\"));\n    }\n  }, {\n    key: \"disconnectHandler\",\n    value: function disconnectHandler(gamepadIndex) {\n      console.log(\"Gamepad \".concat(gamepadIndex, \" disconnected !\"));\n    }\n  }, {\n    key: \"buttonChangeHandler\",\n    value: function buttonChangeHandler(buttonName, down) {\n      console.log(buttonName, down);\n    }\n  }, {\n    key: \"axisChangeHandler\",\n    value: function axisChangeHandler(axisName, value, previousValue) {\n      console.log(axisName, value);\n    }\n  }, {\n    key: \"buttonDownHandler\",\n    value: function buttonDownHandler(buttonName) {\n      console.log(buttonName, 'down');\n    }\n  }, {\n    key: \"buttonUpHandler\",\n    value: function buttonUpHandler(buttonName) {\n      console.log(buttonName, 'up');\n    }\n  }, {\n    key: \"onA\",\n    value: function onA() {\n      console.log(\"A\");\n    } // Fetch the list on first mount\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.sendData(); //this.reportOnGamepad();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var list = this.state.list;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Gamepad, {\n        onConnect: this.connectHandler,\n        onDisconnect: this.disconnectHandler,\n        onA: this.onA,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"List of Items\"), list.length ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, list.map(function (item) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, item);\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"No List Items Found\"), this.state.out_data));\n    }\n  }]);\n\n  return List;\n}(Component);\n\nexport default List;","map":{"version":3,"sources":["/Users/josephkaraki/middleman/client/src/App/pages/List.js"],"names":["React","Component","Script","Gamepad","List","props","sendData","fetch","method","headers","body","JSON","stringify","data","getList","then","res","json","list","setState","reportOnGamepad","rt","d_pad","a_button","l_bump","r_bump","gp","navigator","getGamepads","buttons","pressed","out","axes","console","log","out_data","state","gamepadIndex","buttonName","down","axisName","value","previousValue","connectHandler","disconnectHandler","onA","length","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Script from 'react-load-script'\nimport Gamepad from 'react-gamepad'\n\nclass List extends Component {\n  // Initialize the state\n  constructor(props){\n    super(props);\n    this.state = {\n        out_data:\"\",\n       \n      list: []\n    }\n  }\n  connectHandler(gamepadIndex) {\n    console.log(`Gamepad ${gamepadIndex} connected !`)\n    }\n    \n    disconnectHandler(gamepadIndex) {\n    console.log(`Gamepad ${gamepadIndex} disconnected !`)\n    }\n    \n    buttonChangeHandler(buttonName, down) {\n    console.log(buttonName, down)\n    }\n    \n    axisChangeHandler(axisName, value, previousValue) {\n    console.log(axisName, value)\n    }\n    \n    buttonDownHandler(buttonName) {\n    console.log(buttonName, 'down')\n    }\n    \n    buttonUpHandler(buttonName) {\n    console.log(buttonName, 'up')\n    }\n    onA(){\n    console.log(\"A\")\n\n    }\n  // Fetch the list on first mount\n  componentDidMount() {\n    this.sendData();\n    //this.reportOnGamepad();\n    \n  }\n  \nsendData = () =>{\n    fetch('/api/xsend', {  \n        method: 'post',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n            data : \"50,50\",\n            }),\n        }) \n};\n  \n  // Retrieves the list of items from the Express app\n  getList = () => {\n    fetch('/api/getList')\n    .then(res => res.json())\n    .then(list => this.setState({ list }))\n  }\n\n  reportOnGamepad = () => {\n    var rt;\n\tvar d_pad;\n\tvar a_button;\n\tvar l_bump;\n\tvar r_bump;\n    var gp = navigator.getGamepads()[0];\n\n    if(gp.buttons[8].pressed) \n        rt= 1;\n    else\n        rt=0;\n    if(gp.buttons[1].pressed) \n        a_button= 1;\n    else\n        a_button=0;\n    if(gp.buttons[5].pressed) \n        l_bump= 1;\n    else\n        l_bump=0;\n    if(gp.buttons[6].pressed) \n        r_bump= 1;\n    else\n        r_bump=0;\n    \n    if(gp.buttons[13].pressed) \n        d_pad= 1;\n    else if(gp.buttons[16].pressed) \n        d_pad= 2;\n    else if(gp.buttons[14].pressed) \n        d_pad= 3;\n    else if(gp.buttons[15].pressed) \n        d_pad= 4;\n    else\n        d_pad=0;\n\n\n\n\n    var out =  gp.axes[2]*127+\",\"+gp.axes[3]*127+\",\"+gp.axes[1]*127+\",\"+rt+\",\"+d_pad+\",\"+a_button+\",\"+l_bump+\",\"+r_bump;\n    console.log(out);\n    this.setState({out_data: out})\n\n }\n  render() {\n    const { list } = this.state;\n\n    return (\n      <div className=\"App\">\n      <Gamepad\n        onConnect={this.connectHandler}\n        onDisconnect={this.disconnectHandler}\n \n        onA={this.onA}\n      >\n     <p></p>\n    </Gamepad>\n\n        <h1>List of Items</h1>\n        {/* Check to see if any items are found*/}\n        {list.length ? (\n          <div>\n            {/* Render the list of items */}\n            {list.map((item) => {\n              return(\n                <div>\n                  {item}\n                </div>\n              );\n            })}\n          </div>\n        ) : (\n          <div>\n            <h2>No List Items Found</h2>\n            {this.state.out_data}\n          </div>\n        )\n      }\n      </div>\n    );\n  }\n  \n}\n\nexport default List;"]},"metadata":{},"sourceType":"module"}