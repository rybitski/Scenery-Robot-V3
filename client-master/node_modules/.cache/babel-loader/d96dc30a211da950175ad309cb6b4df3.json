{"ast":null,"code":"import _classCallCheck from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/josephkaraki/middleman/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/josephkaraki/middleman/client/src/App/pages/List.js\";\nimport React, { Component } from 'react';\nimport Script from 'react-load-script';\nimport Gamepad from 'react-gamepad';\nimport update from 'immutability-helper';\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  // Initialize the state\n  function List(props) {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this, props));\n\n    _this.sendData = function () {\n      var out = Math.round(_this.state.lsx) + \",\" + Math.round(_this.state.lsy) * 10 + \",\" + Math.round(_this.state.rsy) * 10 + \",\" + _this.state.rt + \",\" + _this.state.dpad + \",\" + _this.state.a_button + \",\" + _this.state.rb + \",\" + _this.state.lb + \",\" + Math.round(_this.state.seconds * 10);\n      fetch('/api/xsend', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          data: out\n        })\n      });\n    };\n\n    _this.onRT = _this.onRT.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onA = _this.onA.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.axisChangeHandler = _this.axisChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onButtonDown = _this.onButtonDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onLB = _this.onLB.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onRB = _this.onRB.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onButtonUp = _this.onButtonUp.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      out_data: \"\",\n      a_button: 0,\n      rsx: 0,\n      rsy: 0,\n      lsx: 0,\n      lsy: 0,\n      rt: 0,\n      dpad: 0,\n      lb: 0,\n      rb: 0,\n      seconds: 0,\n      list: []\n    };\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"tick\",\n    value: function tick() {\n      this.setState(function (prevState) {\n        return {\n          seconds: prevState.seconds + 0.1\n        };\n      });\n      this.sendData();\n    }\n  }, {\n    key: \"connectHandler\",\n    value: function connectHandler(gamepadIndex) {\n      console.log(\"Gamepad \".concat(gamepadIndex, \" connected !\"));\n    }\n  }, {\n    key: \"disconnectHandler\",\n    value: function disconnectHandler(gamepadIndex) {\n      console.log(\"Gamepad \".concat(gamepadIndex, \" disconnected !\"));\n    }\n  }, {\n    key: \"onButtonUp\",\n    value: function onButtonUp(buttonName) {\n      if (buttonName === \"A\") this.setState({\n        a_button: 0\n      });\n      if (buttonName === \"LB\") this.setState({\n        lb: 0\n      });\n      if (buttonName === \"RB\") this.setState({\n        rb: 0\n      });\n      if (buttonName === \"DPadDown\") this.setState({\n        dpad: 0\n      });\n      if (buttonName === \"DPadUp\") this.setState({\n        dpad: 0\n      });\n    }\n  }, {\n    key: \"axisChangeHandler\",\n    value: function axisChangeHandler(axisName, value, previousValue) {\n      console.log(axisName, value);\n      if (axisName === \"RightStickX\") this.setState({\n        rsx: value * 127\n      });\n      if (axisName === \"RightStickY\") this.setState({\n        rsy: value * 127 / 10\n      });\n      if (axisName === \"LeftStickX\") this.setState({\n        lsx: value * 127\n      });\n      if (axisName === \"LeftStickY\") this.setState({\n        lsy: value * 127 / 10\n      });\n    }\n  }, {\n    key: \"onRT\",\n    value: function onRT() {\n      console.log(\"RT\");\n      /*this.setState({\n          out_data: update(this.state.out_data, {3: 1})\n      })*/\n\n      this.setState({\n        rt: 1\n      });\n    }\n  }, {\n    key: \"onButtonDown\",\n    value: function onButtonDown(buttonName) {\n      console.log(buttonName);\n      if (buttonName === \"DPadUp\") this.setState({\n        dpad: 1\n      });\n      if (buttonName === \"DPadRight\") this.setState({\n        dpad: 2\n      });\n      if (buttonName === \"DPadDown\") this.setState({\n        dpad: 3\n      });\n      if (buttonName === \"DPadLeft\") this.setState({\n        dpad: 4\n      });\n    }\n  }, {\n    key: \"onA\",\n    value: function onA() {\n      console.log(\"A\");\n      this.setState({\n        a_button: 1\n      });\n    }\n  }, {\n    key: \"onLB\",\n    value: function onLB() {\n      console.log(\"LB\");\n      this.setState({\n        lb: 1\n      });\n    }\n  }, {\n    key: \"onRB\",\n    value: function onRB() {\n      console.log(\"RB\");\n      this.setState({\n        rb: 1\n      });\n    } // Fetch the list on first mount\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.interval = setInterval(function () {\n        return _this2.tick();\n      }, 100); //this.reportOnGamepad();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"render\",\n    // Retrieves the list of items from the Express app\n    value: function render() {\n      var list = this.state.list;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Gamepad, {\n        onConnect: this.connectHandler,\n        onDisconnect: this.disconnectHandler,\n        onButtonDown: this.onButtonDown,\n        onAxisChange: this.axisChangeHandler,\n        onLB: this.onLB,\n        onRB: this.onRB,\n        onA: this.onA,\n        onRT: this.onRT,\n        onButtonUp: this.onButtonUp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Seconds: \", this.state.seconds), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"List of Items\"), list.length ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, list.map(function (item) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, item);\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"No List Items Found\"), Math.round(this.state.lsx), \",\", Math.round(this.state.lsy) * 10, \",\", Math.round(this.state.rsy) * 10, \",\", this.state.rt, \",\", this.state.dpad, \",\", this.state.a_button, \",\", this.state.rb, \",\", this.state.lb));\n    }\n  }]);\n\n  return List;\n}(Component);\n\nexport default List;","map":{"version":3,"sources":["/Users/josephkaraki/middleman/client/src/App/pages/List.js"],"names":["React","Component","Script","Gamepad","update","List","props","sendData","out","Math","round","state","lsx","lsy","rsy","rt","dpad","a_button","rb","lb","seconds","fetch","method","headers","body","JSON","stringify","data","onRT","bind","onA","axisChangeHandler","onButtonDown","onLB","onRB","onButtonUp","out_data","rsx","list","setState","prevState","gamepadIndex","console","log","buttonName","axisName","value","previousValue","interval","setInterval","tick","clearInterval","connectHandler","disconnectHandler","length","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Script from 'react-load-script'\nimport Gamepad from 'react-gamepad'\nimport update from 'immutability-helper';\n\nclass List extends Component {\n  // Initialize the state\n  constructor(props){\n    super(props);\n    this.onRT = this.onRT.bind(this);\n    this.onA = this.onA.bind(this);\n    this.axisChangeHandler = this.axisChangeHandler.bind(this);\n    this.onButtonDown = this.onButtonDown.bind(this);\n    this.onLB = this.onLB.bind(this);\n    this.onRB = this.onRB.bind(this);\n    this.onButtonUp = this.onButtonUp.bind(this);\n    this.state = {\n        out_data:\"\",\n        a_button: 0,\n        rsx:0,\n        rsy:0,\n        lsx:0,\n        lsy:0,\n        rt:0,\n        dpad: 0,\n        lb: 0,\n        rb: 0,\n        seconds: 0,\n      list: []\n    }\n\n  }\n    tick() {\n        this.setState(prevState => ({\n        seconds: prevState.seconds + 0.1\n        }));\n        this.sendData();\n\n    }\n    \n\n\n \n    connectHandler(gamepadIndex) {\n    console.log(`Gamepad ${gamepadIndex} connected !`)\n    }\n    \n    disconnectHandler(gamepadIndex) {\n    console.log(`Gamepad ${gamepadIndex} disconnected !`)\n    }\n   \n    onButtonUp(buttonName){\n        if (buttonName===\"A\")\n        this.setState({\n            a_button: 0\n          });\n        if (buttonName===\"LB\")\n        this.setState({\n            lb: 0\n          });\n        if (buttonName===\"RB\")\n            this.setState({\n                rb: 0\n            });\n        if (buttonName===\"DPadDown\")\n        this.setState({\n            dpad: 0\n          });\n        if (buttonName===\"DPadUp\")\n        this.setState({\n            dpad: 0\n          });\n    }\n\n    axisChangeHandler(axisName, value, previousValue) {\n        console.log(axisName, value)\n        if (axisName===\"RightStickX\")\n            this.setState({\n                rsx: value*127\n            });\n        if (axisName===\"RightStickY\")\n            this.setState({\n                rsy: value*127/10\n            });  \n        if (axisName===\"LeftStickX\")\n        this.setState({\n            lsx: value*127\n        });   \n        if (axisName===\"LeftStickY\")\n            this.setState({\n                lsy: value*127/10\n            });   \n      \n    }\n    onRT(){\n        console.log(\"RT\")\n        /*this.setState({\n            out_data: update(this.state.out_data, {3: 1})\n        })*/\n        this.setState({\n            rt: 1\n          });\n          \n    }  \n    onButtonDown(buttonName) {\n        console.log(buttonName)\n        if (buttonName===\"DPadUp\")\n        this.setState({\n            dpad: 1\n          });\n        if (buttonName===\"DPadRight\")\n        this.setState({\n            dpad: 2\n          });\n        if (buttonName===\"DPadDown\")\n            this.setState({\n                dpad: 3\n            });\n        if (buttonName===\"DPadLeft\")\n        this.setState({\n            dpad: 4\n          });\n    }\n\n    \n    onA(){\n        console.log(\"A\")\n        this.setState({\n            a_button: 1\n          });\n    }\n    \n\n    onLB(){\n        console.log(\"LB\")\n        this.setState({\n            lb: 1\n          });\n     }\n     onRB(){\n        console.log(\"RB\")\n        this.setState({\n            rb: 1\n          });\n    \n     }\n  // Fetch the list on first mount\ncomponentDidMount() {\n    this.interval = setInterval(() => this.tick(), 100);\n\n\n    //this.reportOnGamepad();\n    \n  }\n  \n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\nsendData = () =>{\n   var out = Math.round(this.state.lsx)+\",\"+Math.round(this.state.lsy)*10+\",\"+Math.round(this.state.rsy)*10+\",\"+this.state.rt+\",\"+this.state.dpad+\",\"+this.state.a_button+\",\"+this.state.rb+\",\"+this.state.lb+\",\"+Math.round(this.state.seconds*10);\n    fetch('/api/xsend', {  \n        method: 'post',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n            data : out,\n            }),\n        }) \n};\n  \n  // Retrieves the list of items from the Express app\n\n\n\n  render() {\n    const { list } = this.state;\n\n    return (\n      <div className=\"App\">\n      <Gamepad\n        onConnect={this.connectHandler}\n        onDisconnect={this.disconnectHandler}\n        onButtonDown={this.onButtonDown}\n        onAxisChange={this.axisChangeHandler}\n        onLB={this.onLB}\n        onRB={this.onRB}\n        onA={this.onA}\n        onRT={this.onRT}\n        onButtonUp = {this.onButtonUp}\n\n      >\n     <p></p>\n    </Gamepad>\n    <div>\n                Seconds: {this.state.seconds}\n              </div>\n        <h1>List of Items</h1>\n        {/* Check to see if any items are found*/}\n        {list.length ? (\n          <div>\n            {/* Render the list of items */}\n            {list.map((item) => {\n              return(\n                <div>\n                  {item}\n                </div>\n              );\n            })}\n          </div>\n        ) : (\n          <div>\n            <h2>No List Items Found</h2>\n            \n            {Math.round(this.state.lsx)},{Math.round(this.state.lsy)*10},{Math.round(this.state.rsy)*10},{this.state.rt},{this.state.dpad},{this.state.a_button},{this.state.rb},{this.state.lb}\n          </div>\n        )\n      }\n      </div>\n    );\n  }\n  \n}\n\nexport default List;"]},"metadata":{},"sourceType":"module"}